# -*- coding:utf-8 -*-
# !/usr/bin/env python
# Time 09 13:49
# Author Yo
# Email YoLoveLife@outlook.com
"""
Django settings for devEops project.
Generated by 'django-admin startproject' using Django 2.0+.
"""
import os
import sys
import datetime
import importlib
import django.db.backends.mysql
from deveops.variable import *
# from deveops import conf as DEVEOPS_CONF
from deveops.conf import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
APPS_DIR = BASE_DIR+'/apps'
sys.path.append(APPS_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1x$!#dwp2_6^tdgs1nv8pwgutbc#4m%#qaz!m!0h_f*%6fp+vt'

# ASGI
ASGI_APPLICATION = 'deveops.routing.application'

# WSGI
WSGI_APPLICATION = 'deveops.wsgi.application'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'utils.apps.UtilsConfig',
    'authority.apps.AuthorityConfig',
    'manager.apps.ManagerConfig',
    'ops.apps.OpsConfig',
    'work.apps.WorkConfig',
    'timeline.apps.TimelineConfig',
    'variable.apps.VariableConfig',
    'dashboard.apps.DashboardConfig',
    'yodns.apps.YoDnsConfig',
    'zdb.apps.ZDBConfig',
    'monitor.apps.MonitorConfig',
    'ezsetup.apps.EZSetupConfig',
    'yocdn.apps.YoCDNConfig',
    'pool.apps.PoolConfig',
    'rest_framework',
    'rest_framework_jwt',
    'corsheaders',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'channels',
    'django_mysql',
    # 'django.contrib.messages',
    # 'bootstrap3',
    # 'djcelery', #celery
    # 'kombu.transport.django', #celery
]

# JWF
JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=1),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
    'JWT_SECRET_KEY': SECRET_KEY,
}


REST_FRAMEWORK = {
    # 'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.DjangoFilterBackend',),
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    )
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'localhost:8000',
    'localhost:8080',
    '10.100.100.246:8888',
    '192.168.122.222:8000',
)

ROOT_URLCONF = 'deveops.urls'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
        'OPTIONS': {
            'charset': 'utf8mb4',
            "init_command": "SET foreign_key_checks = 0;",
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# TEMPLATES
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
            ],
        },
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

DEFAULT_CHARSET = 'utf-8'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'

# Media files
MEDIA_ROOT = BASE_DIR + MEDIA_DIR
MEDIA_URL = '/media/'

# Ops dir
OPS_ROOT = MEDIA_ROOT + OPS_DIR

# Work dir
WORK_ROOT = MEDIA_ROOT + WORK_DIR

# Dashboard dir
DASHBOARD_ROOT = MEDIA_ROOT + DASHBOARD_DIR

# QCode dir
QCODE_ROOT = MEDIA_ROOT + QCODE_DIR

# Tool dir
TOOL_ROOT = BASE_DIR + TOOL_DIR

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "DevOps/static"),
    os.path.join(BASE_DIR, "DevOps/media"),
)

# LOGIN
AUTH_USER_MODEL = 'authority.ExtendUser'

# SESSION
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# LDAP
if ENVIRONMENT != 'TRAVIS':
    from django_auth_ldap.config import LDAPSearch,GroupOfNamesType
    import ldap
    AUTHENTICATION_BACKENDS = (
        'django_auth_ldap.backend.LDAPBackend',
        'django.contrib.auth.backends.ModelBackend',
    )
    AUTH_LDAP_SERVER_URI = LDAP_SERVER
    AUTH_LDAP_BIND_DN = LDAP_DN
    AUTH_LDAP_BIND_PASSWORD = LDAP_PASSWD

    OU = LDAP_OU
    AUTH_LDAP_GROUP_SEARCH = LDAPSearch(OU, ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)")
    AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr="cn")
    AUTH_LDAP_USER_SEARCH = LDAPSearch(OU, ldap.SCOPE_SUBTREE, "(&(objectClass=*)(sAMAccountName=%(user)s))")
    AUTH_LDAP_USER_ATTR_MAP = {
        "full_name": "cn",
        "first_name": "sn",
    }
    AUTH_LDAP_ALWAYS_UPDATE_USER = True
    # AUTH_LDAP_MIRROR_GROUPS = True
else:
    pass

# LANGUAGE
LANGUAGE = importlib.import_module('deveops.i18n.' + I18N)

# CHANNEL
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(
                "redis://:{PASSWORD}@{HOST}:{PORT}/{SPACE}".format(
                    PASSWORD=REDIS_PASSWD,
                    HOST=REDIS_HOST,
                    PORT=REDIS_PORT,
                    SPACE=REDIS_SPACE)
            )],
        },
    },
}

#DJANGO LOG
# if DEBUG == True:
#     LOGGING_LEVEL = 'DEBUG'
# else:
#     LOGGING_LEVEL = 'WARNING'
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'formatters': {
#        'standard': {
#            # 'format': '%(levelname)s-%(asctime)s-'
#            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'  #日志格式
#        }
#     },
#     'filters': {
#     },
#     'handlers': {
#         'default': {
#             'level':LOGGING_LEVEL,
#             'class':'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/django.log',     #日志输出文件
#             'maxBytes': 1024*1024*5,                  #文件大小
#             'backupCount': 5,                         #备份份数
#             'formatter':'standard',                   #使用哪种formatters日志格式
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['default'],
#             'level': LOGGING_LEVEL,
#             'propagate': False
#         }
#     }
# }
#
# #PERSON LOG
# import logging
# import logging.config
# # logging.basicConfig(level=logging.DEBUG,
# #                     format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
# #                     datefmt='%a, %d %b %Y %H:%M:%S',
# #                     filename='logs/myapp.log',
# #                     filemode='w')
#
# logging.config.fileConfig('logging.ini')
# logger = logging.getLogger("deveops.api")
# logging.debug('This is debug message')
# logging.info('This is info message')
# logging.warning('This is warning message')